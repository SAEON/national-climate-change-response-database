name: Deploy nccrd.saeon.ac.za

on:
  workflow_dispatch:
  push:
    branches:
      - next

env:
  REGISTRY: ghcr.io
  NCCRD_IMAGE_NAME: ${{ github.repository }}_next_node
  NGINX_IMAGE_NAME: ${{ github.repository }}_next_nginx
  BRANCH_REF: next

jobs:
  build-nginx:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NGINX_IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push NCCRD
        uses: docker/build-push-action@v2
        with:
          context: src/nginx
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-nccrd:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.NCCRD_IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push NCCRD
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: |
            HOSTNAME=https://nccrd.saeon.ac.za
            DEFAULT_NOTICES="This is the DEVELOPMENT deployment,warn"
            SHOW_DEV_WARNING="true"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: [build-nginx, build-nccrd]
    runs-on: github-runner.saeon.int
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: (SCP) Copy Docker files to app server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          source: 'deploy/next/stack.yml'
          target: 'nccrd-next'

      - name: (SSH) Deploy Docker stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEPLOYMENT_HOSTNAME }}
          username: ${{ secrets.DEPLOYMENT_HOST_USERNAME }}
          password: ${{ secrets.DEPLOYMENT_HOST_PASSWORD }}
          port: ${{ secrets.DEPLOYMENT_HOST_SSH_PORT }}
          script: |
            echo "MSSQL_PASSWORD=${{ secrets.MSSQL_PASSWORD }}" > /home/runner/nccrd-next/deploy/next/stack.env
            echo "MSSQL_USERNAME=${{ secrets.MSSQL_USERNAME }}" >> /home/runner/nccrd-next/deploy/next/stack.env
            echo "NCCRD_IMAGE=${{ needs.build-nccrd.outputs.image }}" >> /home/runner/nccrd-next/deploy/next/stack.env
            echo "NGINX_IMAGE=${{ needs.build-nginx.outputs.image }}" >> /home/runner/nccrd-next/deploy/next/stack.env
            echo "ODP_AUTH_CLIENT_SECRET=${{ secrets.ODP_AUTH_CLIENT_SECRET }}" >> /home/runner/nccrd-next/deploy/next/stack.env
            sudo /opt/deploy-docker-stack.sh /home/runner/nccrd-next/deploy/next/stack.yml /home/runner/nccrd-next/deploy/next/stack.env nccrd_next
